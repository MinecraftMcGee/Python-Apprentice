

import turtle
from turtle import *


if __name__ == '__main__':
    # Click in the righthand window to make it active then use your arrow
# keys to control the spaceship!
  game = True
  screen = turtle.Screen()
# this assures that the size of the screen will always be 400x400 ...
  angle = 0
  screen.setup(400, 400)
# ... which is the same size as our image
# now set the background to our space image
 
  screen.bgcolor("white")
  t = turtle.Turtle()
# Or, set the shape of a turtle
   # screen.addshape("turtle.png")
 #   turtle.shape("turtle.png")
  turtle.penup()
  t.penup()
  turtle.setx(-100)
  t.setx(100)
  t.sety(0)
  turtle.sety(0)
  
  while(game):
    turtle.penup()

    move_speed = 5
    turn_speed = 25


# these defs control the movement of our "turtle"
    def forward():
        turtle.forward(move_speed)

    def backward():
        turtle.backward(move_speed)

    def left():
        turtle.left(turn_speed)

    def right():
        turtle.right(turn_speed)

    turtle.penup()
    turtle.speed(0)


# now associate the defs from above with certain keyboard events
    screen.onkey(forward, "w")
    screen.onkey(backward, "s")
    screen.onkey(left, "a")
    screen.onkey(right, "d")
    screen.listen()


# Or, set the shape of a t
  #  screen.addshape("rocket.png")
  #  t.shape("rocket.png")

    move_speed = 5
    turn_speed = 10

# these defs control the movement of our "t"
    def forward():
        t.forward(move_speed)

    def backward():
        t.backward(move_speed)

    def left():
        t.left(turn_speed)


    def right():
        t.right(turn_speed)
        #angle = angle - turn_speed
        #t.tilt(turn_speed)
        #print(t.tiltangle())

        #print(angle)

    def spacebar():
      print("works")
      angle = -turtle.heading()
      print(angle)
      b = turtle.Turtle()
      b.hideturtle()
      b.penup()
      b.setposition(turtle.xcor(),turtle.ycor())
      b.pendown()
      b.right(angle)
      for i in range(50):
        b.forward(1)
        if ((b.xcor()-8)< t.xcor() and t.xcor()<(b.xcor()+8)):
          if ((b.ycor()-8)< t.ycor() and t.ycor()<(b.ycor()+8)):
            print("game over player 2")
            b.hideturtle()
            t.hideturtle()
            game=False

      b.hideturtle()
      b.clear()
    t.penup()
    t.speed(0)
#t.home()

# now associate the defs from above with certain keyboard events
    screen.onkey(forward, "Up")
    screen.onkey(backward, "Down")
    screen.onkey(left, "Left")
    screen.onkey(right, "Right")
    screen.onkey(spacebar, "space")
    screen.listen()
   
    if ((turtle.xcor()-8)< t.xcor() and t.xcor()<(turtle.xcor()+8)):
      if ((turtle.ycor()-8)< t.ycor() and t.ycor()<(turtle.ycor()+8)):
        print("game over player 1")
        t.hideturtle()
        turtle.hideturtle()
        game=False



# exitonclick